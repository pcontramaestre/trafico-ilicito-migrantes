---
interface Props {
  contenido: string; //Contenido del popup
  idPopup: string; //ID del popup que se va a abrir
  idInteraccion: string; //ID del boton o enlace que activa el popup
  cerrarAzul?: boolean;
  cerrarVerde?: boolean;
}
const { contenido,idPopup, idInteraccion,cerrarAzul, cerrarVerde } = Astro.props as Props;
---
<div class="popup relative" id={idPopup} data-interaccion={idInteraccion} data-idpopup={idPopup}>
  <!-- Generar codigo, si cerrarAzul es falso mostrar el boton de cerrar -->
  <div class="fondo-popup absolute"></div>
  <div class="popup-container">  
    <span class="cerrar-popup z-10" id="cerrar-popups" style={`display: ${cerrarAzul ? 'none' : 'block'}`}>
      <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
        <path  d="M9.15865 51.5786C6.29334 48.8112 4.00787 45.5009 2.4356 41.8408C0.863334 38.1807 0.0357472 34.2441 0.0011327 30.2607C-0.0334818 26.2773 0.725569 22.3269 2.234 18.64C3.74242 14.9531 5.97002 11.6036 8.7868 8.7868C11.6036 5.97002 14.9531 3.74242 18.64 2.234C22.3269 0.725569 26.2773 -0.0334818 30.2607 0.0011327C34.2441 0.0357472 38.1807 0.863334 41.8408 2.4356C45.5009 4.00787 48.8112 6.29334 51.5786 9.15865C57.0434 14.8167 60.0672 22.3948 59.9989 30.2607C59.9305 38.1266 56.7754 45.651 51.2132 51.2132C45.651 56.7754 38.1266 59.9305 30.2607 59.9989C22.3948 60.0672 14.8167 57.0434 9.15865 51.5786ZM34.5686 30.3686L43.0586 21.8786L38.8286 17.6486L30.3686 26.1386L21.8786 17.6486L17.6486 21.8786L26.1386 30.3686L17.6486 38.8586L21.8786 43.0886L30.3686 34.5986L38.8586 43.0886L43.0886 38.8586L34.5986 30.3686H34.5686Z" fill="#F6F4F3"/>
      </svg>
    </span>
    <span class="cerrar-popup z-10 cerrarAzul" id="cerrar-popups" style={`display: ${cerrarAzul ? 'block' : 'none'}`}>
      <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none" >
        <path  d="M9.15865 51.5786C6.29334 48.8112 4.00787 45.5009 2.4356 41.8408C0.863334 38.1807 0.0357472 34.2441 0.0011327 30.2607C-0.0334818 26.2773 0.725569 22.3269 2.234 18.64C3.74242 14.9531 5.97002 11.6036 8.7868 8.7868C11.6036 5.97002 14.9531 3.74242 18.64 2.234C22.3269 0.725569 26.2773 -0.0334818 30.2607 0.0011327C34.2441 0.0357472 38.1807 0.863334 41.8408 2.4356C45.5009 4.00787 48.8112 6.29334 51.5786 9.15865C57.0434 14.8167 60.0672 22.3948 59.9989 30.2607C59.9305 38.1266 56.7754 45.651 51.2132 51.2132C45.651 56.7754 38.1266 59.9305 30.2607 59.9989C22.3948 60.0672 14.8167 57.0434 9.15865 51.5786ZM34.5686 30.3686L43.0586 21.8786L38.8286 17.6486L30.3686 26.1386L21.8786 17.6486L17.6486 21.8786L26.1386 30.3686L17.6486 38.8586L21.8786 43.0886L30.3686 34.5986L38.8586 43.0886L43.0886 38.8586L34.5986 30.3686H34.5686Z" 
        fill=`${cerrarVerde ? '#026972' : '#25A7EF' }`/>
      </svg>
    </span>

    <!-- Contenido del popup en HTML -->
    <div class="content-popup" set:html={contenido}></div>
  </div>
</div>

<style>
  .popup {
    /* display: none; */
    visibility: hidden;
    opacity: 0;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9999;
    /* transition: display 0.6s ease; */
    transition: opacity 0.6s ease, visibility 0s 0.6s; /* Cambia display a visibility y opacity */
    color: white;
  }

  .popup.show {
    visibility: visible;
    opacity: 1;
    transition: opacity 0.6s ease;
  }
  .cerrar-popup {
    position: absolute;
    top: 20px;
    right: 20px;
    cursor: pointer;
    font-size: 20px;
    border: 3px solid #b85600;
    border-radius: 50%;
    background: #b85600;
    box-shadow: 0px 0px 6px 2px #b85600;
  }
  .cerrar-popup.cerrarAzul {
    border: 3px solid #ffffff;
    border-radius: 50%;
    background: #ffffff;
    box-shadow: 0px 0px 6px 2px #f2f2f2;
  }
  .link_menu > img {
    filter: brightness(0.5);
    transition: all 0.3s ease-in-out;
  }
  .link_menu:hover > img {
    filter: brightness(1);
    transform: scale(1.5);
  }
  .link_menu:hover h1 {
    text-shadow: 1px 1px 1px black;
  }

  #popup-lateral2 .cerrar-popup{
    top: 30px;
    right: 30px;
  }
  
</style>

<script is:inline define:vars={{idPopup, idInteraccion }}>
  document.addEventListener('DOMContentLoaded', () => {
    
    //obtener dataset data-interaccion y data-ipopup
    const popupId = idPopup;
    const interaccionID = idInteraccion;

    //Script para abrir el popup, al hacer clic sobre el parametro recibido por props
    const interaccionIzquierda = document.getElementById(interaccionID);
    const popup = document.getElementById(popupId);
    //const closeButton = document.getElementById('cerrar-popups');
    const closeButton = document.querySelectorAll('.cerrar-popup');
    // Cerrar el popup al hacer clic en el botón de cerrar
    closeButton.forEach(button => {
      button.addEventListener('click', () => {
        const popup = button.closest('.popup');
        // popup.style.display = 'none';
        popup.classList.remove('show');
        const allPopups = document.querySelectorAll('.popup'); // Selecciona todos los popups  
        allPopups.forEach(popup => {  
          popup.classList.remove('show'); // Elimina la clase .show de cada popup  
        }); 
        handleVideoState();
      });
    });  

    // Mostrar el popup al hacer clic en interaccionIzquierda
    interaccionIzquierda.addEventListener('click', () => {
      //popup.style.display = 'flex';
      popup.classList.add('show');
    });

    // Función para manejar el estado del video  
    const handleVideoState = () => {  
      const videoContainers = popup.querySelectorAll('.video-container');  
      videoContainers.forEach(videoContainer => {  
        const video = videoContainer.querySelector('video');  
        if (video) {  
          video.pause();  
          video.currentTime = 0;  
        }  
      });  
    };

    //Funcion para cerrar el popup cuando aparece el menu .link_menu y se accede 
    const linkMenu = popup.querySelectorAll('.link_menu');
    linkMenu.forEach(menu => {
      menu.addEventListener('click', () => {
        popup.classList.remove('show');
        const allPopups = document.querySelectorAll('.popup'); // Selecciona todos los popups  
        allPopups.forEach(popup => {  
          popup.classList.remove('show'); // Elimina la clase .show de cada popup  
        }); 
      });
    });


  });
</script>